import Head from 'next/head'
import styles from '../styles/Home.module.css'

import {
  Chart,
  ArcElement,
  LineElement,
  BarElement,
  PointElement,
  BarController,
  BubbleController,
  DoughnutController,
  LineController,
  PieController,
  PolarAreaController,
  RadarController,
  ScatterController,
  CategoryScale,
  LinearScale,
  LogarithmicScale,
  RadialLinearScale,
  TimeScale,
  TimeSeriesScale,
  Decimation,
  Filler,
  Legend,
  Title,
  Tooltip,
  SubTitle
} from 'chart.js';

Chart.register(
  ArcElement,
  LineElement,
  BarElement,
  PointElement,
  BarController,
  BubbleController,
  DoughnutController,
  LineController,
  PieController,
  PolarAreaController,
  RadarController,
  ScatterController,
  CategoryScale,
  LinearScale,
  LogarithmicScale,
  RadialLinearScale,
  TimeScale,
  TimeSeriesScale,
  Decimation,
  Filler,
  Legend,
  Title,
  Tooltip,
  SubTitle
);

import { Bar } from 'react-chartjs-2'



export default function Home({coupYearFrequencyArray, datetime}) {

  //https://www.chartjs.org/docs/latest/getting-started/integration.html
  //https://www.chartjs.org/docs/latest/charts/bar.html
  //

  const years = [];
  coupYearFrequencyArray.forEach((coupYear) => {
    years.push(coupYear.year);
  })

  const numberOfCoups = [];
  coupYearFrequencyArray.forEach((coupYear) => {
    numberOfCoups.push(coupYear.frequency);
  });

  const data = {
    labels: years,
    datasets: [{
      label: "Number of Coups",
      data: numberOfCoups,
      borderColor: function(context) {
        const numberOfCoups = context.parsed.y;
        //Colors From OSHA - https://www.creativesafetysupply.com/articles/safety-colors/
        if (numberOfCoups <= 4) {
          return 'rgba(255, 205, 86, 1)'
        }
        else if (numberOfCoups > 4 && numberOfCoups <= 9) {
          return 'rgba(255, 159, 64, 1)'
        }
        else if (numberOfCoups > 9) {
          return 'rgba(255, 99, 132, 1)'
        }
      },
      borderWidth: 1,
      backgroundColor: function(context) {
        const numberOfCoups = context.parsed.y;
        //Colors From OSHA - https://www.creativesafetysupply.com/articles/safety-colors/
        if (numberOfCoups <= 4) {
          return 'rgba(255, 205, 86, 0.2)'
        }
        else if (numberOfCoups > 4 && numberOfCoups <= 9) {
          return 'rgba(255, 159, 64, 0.2)'
        }
        else if (numberOfCoups > 9) {
          return 'rgba(255, 99, 132, 0.2)'
        }
      },
    },
    ]};

  const options = {
    onClick: function(context) {

    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Coup D&apos;Etat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h2>Coups in 2022</h2>
        <p>{datetime}</p>
        <Bar data={data} width={50} height={20} options={options}/>
      </main>
    </div>
    
  )
}

export async function getStaticProps() {
  //First, fetch the JSON file that contains data on the coups.
  let jsonFile = await fetch("https://raw.githubusercontent.com/austingae/coup-d-etat/master/data/data.json");
  let coupData = await jsonFile.json();



  //coupYearArray = an array of the coup years. Display: [1952, 1957, 150, 1956, 1957, 1957, 1957, 1958, 1970, 1986, and so on]
  let coupYearArray = [];
  coupData.forEach((coup) => {
    coupYearArray.push(coup.year);
  });



  //uniqueCoupYearsArray = an array of unique coup years. Display: [1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, and so on]
  let uniqueCoupYearsArray = [...new Set(coupYearArray)]; 
  /*
  There was not a single military coup in the year of 2007; therefore, the JSON dataset does not have the year 2007.
  Hence, I manually added the year 2007 to the uniqueCoupYearsArray. 
  In the future, if a year has 0 coup, then I must come to the code and manually add that year to the uniqueCoupYearsArray.
  */
  uniqueCoupYearsArray.push(2007);
  uniqueCoupYearsArray.sort();


  //coupYearFrequencyArray will show the number of coups that occurred each year.
  //Format: {year: 1975, frequency: 14}
  let coupYearFrequencyArray = [];

  //First, coupYearFrequencyArray will have the format of this: {year: 1950, frequency: 0}, {year: 1951, frequency: 0}
  uniqueCoupYearsArray.forEach((uniqueCoupYear) => {
    coupYearFrequencyArray.push(
      {
        year: uniqueCoupYear,
        frequency: 0
      }
    )
  });

  //Then, this piece of code will find out the number of coups that occurred each year. 
  coupYearArray.forEach((coupYear) => {
    coupYearFrequencyArray.forEach((uniqueCoupYear) => {
      if (coupYear == uniqueCoupYear.year) {
        uniqueCoupYear.frequency = uniqueCoupYear.frequency + 1;
      }
    })
  })

let currentdate = new Date(); 
let datetime = "Last Sync: " + currentdate.getDate() + "/"
                + (currentdate.getMonth()+1)  + "/" 
                + currentdate.getFullYear() + " @ "  
                + currentdate.getHours() + ":"  
                + currentdate.getMinutes() + ":" 
                + currentdate.getSeconds();

  console.log(datetime);
  return {
    props: {
      coupYearFrequencyArray: coupYearFrequencyArray,
      datetime: datetime,
    }
  }
}


  //Set() - creates an array of unique elements only - https://www.w3schools.com/js/js_object_sets.asp
  // .sort() - https://www.w3schools.com/jsref/jsref_sort.asp
  //what does '...' mean? - https://www.quora.com/What-does-the-mean-in-Javascript